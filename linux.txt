* CRIAR UM FILESYSTEM UDF (Universal Disk Format, usado em DVDs e discos óticos no geral):
    $ dd if=/dev/zero of=/dev/sdc bs=1M count=1
    $ mkudffs -b 512 --media-type=hd /dev/sdc

* CHROOT NO SYSTEMRESCUECD:
  * Preparar o binding no chroot:
    $ mount --bind /dev <chroot dir>/dev
    $ mount --bind /proc <chroot dir>/proc
    $ mount --bind /sys <chroot dir>/sys

  * Como fazer chroot no SystemRescueCD:
    $ SHELL=/bin/bash chroot <ponto_de_montagem>
    OU
    $ exec bash
    $ chroot /mnt/<mountpoint> /bin/bash

* Como bootar o Arch Linux no GRUB2 (modo de edição "e"):
    set root=(hd0,0)
    linux /boot/vmlinuz26 root=/dev/sda1 ro
    initrd /boot/kernel26.img
    boot

* 2 formas de ver se uma porta está ativa no linux (por exemplo, a porta 9000 do php5-fpm):
    $ netstat -apn | grep ':9000'
    $ lsof -i tcp:9000 -n

* Bootar um pendrive bootável ou iso pelo qemu:
    $ qemu-system-x86_64 -hda /dev/sdx
    $ qemu-system-x86_64 -cdrom filename.iso


* Total de linhas de um arquivo:
    $ wc -l [nome_arquivo]


* Substituir todas as vírgulas em um arquivo com uma linha grande por quebras de linha:
    $ cat query_demorada_ids.txt | sed 's/\,/\n/g' > query_demorada_formatted.txt

* Exportar um dicionário do programa aspell para arquivo:
  aspell --encoding UTF-8 -l pt_BR dump master > /tmp/brasil.txt
  (claro que, neste caso, tenho que ter o dicionário pt_BR instalado no sistema para funcionar)

* Descobrir a versão da Distro:
    $ cat /etc/issue

* Testar se a resolução de nomes (DNS) está funcionando na máquina:
  $ dig [nome_do_dominio]
  (se não estiver resolvendo os DNS não vai retornar nada)

* Como fazer uma máquina responder por vários IPs:
    Após subir a interface "eth0" , ou equivalente:
        #multi_ips.sh
        #!/bin/bash
        ifconfig eth0:0 165.1.200.237 netmask 255.255.254.0
        ifconfig eth0:1 165.1.200.238 netmask 255.255.254.0
        ifconfig eth0:2 165.1.200.239 netmask 255.255.254.0
        ifconfig eth0:3 165.1.200.240 netmask 255.255.254.0
        ifconfig eth0:4 165.1.200.241 netmask 255.255.254.0
        ifconfig eth0:5 165.1.200.242 netmask 255.255.254.0
        ifconfig eth0:6 165.1.200.243 netmask 255.255.254.0
        ifconfig eth0:7 165.1.200.244 netmask 255.255.254.0
        ifconfig eth0:8 165.1.200.245 netmask 255.255.254.0
        ifconfig eth0:9 165.1.200.246 netmask 255.255.254.0
        ifconfig eth0:10 165.1.200.247 netmask 255.255.254.0
        ifconfig eth0:11 165.1.200.248 netmask 255.255.254.0
        ifconfig eth0:12 165.1.200.249 netmask 255.255.254.0
        ifconfig eth0:13 165.1.200.250 netmask 255.255.254.0
        ifconfig eth0:14 165.1.200.251 netmask 255.255.254.0
        ifconfig eth0:15 165.1.200.252 netmask 255.255.254.0
        ifconfig eth0:16 165.1.200.253 netmask 255.255.254.0
        ifconfig eth0:17 165.1.200.254 netmask 255.255.254.0
        ifconfig eth0:18 165.1.200.132 netmask 255.255.254.0
        IMPORTANTE: É melhor colocar os IPs de eth0:0 até o último em um range de IPs diferente do ip que está na eth0 principal.
    Para confirmar, após setar os IPs, execute:
        # ifconfig -a
    Posso colocar esse script "multi_ips.sh" no meu /etc/rc.local, por exemplo.

    ALTERNATIVE WAY: EDIT THE IPs CONFIGURATION FILE:

        $ vim /etc/network/interfaces:

            # The loopback network interface
            auto lo
            iface lo inet loopback

            # The main network interface (in this case, as DHCP IP)
            auto eth0
            iface eth0 inet dhcp

            # The main network interface (as STATIC IPs)
            auto eth0:0
            iface eth0:0 inet static
            address 192.168.0.1
            netmask 255.255.255.0
            broadcast 192.168.0.255

            auto eth0:1
            iface eth0:1 inet static
            address 192.168.0.2
            netmask 255.255.255.0
            broadcast 192.168.0.255

            auto eth0:2
            iface eth0:2 inet static
            address 192.168.0.3
            netmask 255.255.255.0
            broadcast 192.168.0.255

* Exemplo de uso simples do rsync:
    /*
    PARÂMETROS DO RSYNC:
      r: recursivo
      c: usa checksum para detectar se um arquivo mudou
      h: saída human readable
      z: compress data durante a transferência
      P: continua de onde parou (partial)
      v: verboso
      i: informaçoes detalhadas do que ser feito com o arquivo
      progress: mostra o progresso da transferência
      iconv: codificação de origem e destino dos arquivos. Ex.: latin1,utf8
      log_file: nome do arquivo que guarda o log das operações que foram feitas
      delete: deleta os arquivos para manter a origem e o destino sincronizados
      bwlimit: máximo da banda a ser usada, em kbps
      IMPORTANTE:
        --dry-run : simulação da transferência, mas não transfere nada fisicamente (útil para ver o que seria feito - DEBUG)
     */
    rsync -rchzPvi --bwlimit=300 --progress --iconv=latin1,utf8 --log-file=log.txt --delete  projetos_tiagoprn/* projetos_tiagoprn_ALL
    /* Abaixo, desconsidera as pastas e arquivos com .svn e .git no nome. */
    rsync -rchzPvi --bwlimit=300 --progress --iconv=latin1,utf8 --log-file=sync.txt --delete --exclude '.svn*' --exclude '.git*' /origin/* /destiny/folder

    /* Abaixo, faz o rsync para um servidor remoto, via ssh, em um server que ouve a conexão ssh em uma porta diferente da 22000 */
    rsync -rchzPvi --bwlimit=100 --progress --iconv=latin1,utf8 --log-file=/tmp/rsync.txt --delete --exclude '*~' --exclude '*.BAK' /origem/* -e "ssh -p 22000" user@remoteserver.net:/destino

    RSYNC COMO DAEMON: http://kezhong.wordpress.com/2010/12/01/rsync-backup-in-daemon-mode/

    RSYNC WITH EXCLUDE FILE:
        EXCLUDE_FILE
            /dev/*
            /proc/*
            /sys/*
            /media/*
            /mnt/*
            /run/*
            /tmp/*
        rsync -avc --exclude-from=EXCLUDE_FILE / /mnt

    RSYNC OVER SSH ON NON-DEFAULT PORT:

    rsync -rchzPvi --progress yum.repos.d/ -e "ssh -p9999" root@192.168.0.154:/tmp


* Exemplo de grep com match antes do primeiro pipe e não match após:
    $ grep -rn 'string_to_find' . | grep -v 'cache' | grep -v '.svn'
    Neste exemplo, ele vai procurar 'string_to_find' recursivamente na pasta mostrando o número das linhas onde a string foi encontrada, mas vai ignorar os resultados onde ele encontrar as strings "cache" e ".svn".

* Exemplo de wget recursivo para navegar offline:

    $ wget -k -r -p http://www.site.com

The -r option recurses through the site's links starting at http://www.site.com/index.html. The -k option rewrites the downloaded files so that links from page to page are all relative, allowing you to navigate correctly through the downloaded pages. The -p option downloads all extra content on the page, such as images. This way, you can get a mirror of a site on your desktop. wget also handles proxies, cookies and HTTP authentication, along with many other conditions.

* reference: http://tech.gaeatimes.com/index.php/archive/how-to-use-wget-through-proxy :

Wget is a super-useful utility to download pages and automate all types of web related tasks. It works for HTTP as well as FTP URLâs. Here is a brief tutorial on how to use wget through proxy server.

To get wget to use a proxy, you must set up an environment variable before using wget. Type this at the command prompt / console:
For Windows:
set http_proxy=http://proxy.example.com:8080

For Linux/Unix:
export http_proxy="http://proxy.example.com:8080"

Replace proxy.example.com with your actual proxy server.
Replace 8080 with your actual proxy server port.

You can similarly use ftp_proxy to proxy ftp requests. An example on Linux would be:
export ftp_proxy="http://proxy.example.com:8080"

Then you should specify the following option in wget command line to turn the proxy behavior on:
âproxy=on

Alternatively you can use the following to turn it off:
âproxy=off

You can use âproxy-username="user name" âproxy-passwd="password" to set proxy user name and password where required.
Replace user name with your proxy server user name and password with your proxy server password. Another alternative is to specify them in http_proxy / ftp_proxy environment variable as follows:
export http_proxy="http://username:password@proxy.example.com:8080"


* GPG:
    Encriptar:
        $ gpg -r B47B5D91 -se encriptar.txt
    Decriptar:
        $ gpg -d encriptado.gpg > encriptado.txt
(cheatsheet: http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/)

* Scripts no cron:

    $ crontab -e

    59 23 * * * /home/tiago/script.sh > /home/tiago/script.log 2>&1

    OBS.: the '2>&1' parameters indicates that the standard error (2>) é redirecionado para o mesmo arquivo apontado pela saída padrão (&1) --- ou seja, a saída padrão e os erros do script estarão em /home/tiago/script.log.
OBS2.: Os logs de execução dos scripts que estão no cron (ou seja, do próprio cron), estão em /var/log/cron.

* Criação de usuários:

    $ useradd -m -d /home/newuser -g users -G wheel,admin,docker newuser

    Where:
        -d: the user home directory
        -g: the user default group
        -G: outros(s) grupo(s), separados por vírgula
        "newuser": nome (login) do usuário

    Depois, você pode mudar a senha dele com:
        $ passwd newuser


* Mudar o shell de um usuário:
    - Logar como o usuário desejado;
    - Rodar o comando chsh passando o caminho do shell.
        Ex.:
            $ chsh -s /bin/bash

* To get 2Gb of space for files in RAM, edit /etc/fstab to add the following line:
    tmpfs     /var/ramspace       tmpfs     defaults,size=2048M     0     0
    After that, /var/ramspace is now the place to store your files in memory.

* Equivalente ao baobab, em modo texto (dialog):
    ncdu

* crontab configuration sample:

# Minute   Hour   Day of Month       Month          Day of Week        Command
# (0-59)  (0-23)     (1-31)    (1-12 or Jan-Dec)  (0-6 or Sun-Sat)
0        5          *             *                *            /home/user/my_command.sh

* COPY A SSH KEY TO ANOTHER SERVER:
    $ ssh-copy-id -i ~/.ssh/id_rsa.pub -p [remote_ssh_port] remoteuser@192.168.0.200

* I can also use a ".pem" file to ssh into a machine, like with amazon.
    $ ssh -i my_file.pem user@remotehost


* Current user UID / GID:

    $ id

    Sample output:

    uid=1000(tiago) gid=1000(tiago) grupos=1000(tiago),0(root),10(wheel),100(users),108(vboxusers),142(docker)

* Get the information on the linux distro you're running:

    $ cat /etc/os-release

* SSHFS:
    - MOUNT:
        $ sshfs -o IdentityFile=~/.ssh/id_rsa myuser@REMOTE_IP:/home/tparanhos/shared /remotes/REMOTE_NAME
    - UMOUNT:
        $ sudo umount /remotes/REMOTE_NAME

* Listen to connections coming from specific IP (tcpdump):

    EXAMPLES:
        To monitor HTTP traffic including request and response headers and ssage body from a particular source:
            $ tcpdump -i eth0 -n -vvv -s 0 'src 172.16.1.208 and tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)' -w /tmp/tcpdump.txt

        OBS.: posso trocar "src" por "dst" para pegar requisições cujo DESTINO seja o desejado.

* How to enable the login message (banner) from /etc/issue after the ssh login prompt:
    - open "/etc/ssh/sshd_config"
    - Uncomment the "Banner" section and point to the file:
        (e.g.: /etc/issue)
        Banner /etc/issue.net

* How to run a command x times in "parallel":
    That can be used for simulating 100 simultaneous curls to a given URL to test how a server performs under a high number of requisitions:
        $ parallel -j 1000 ./test.sh ::: {1..1000}
            (where "test.sh" is a script with one or more "curl" commands)

* To simulate X concurrent users to load a web server:

    $ yum install siege

    $ siege -b -c50 -d1 -t60S -i -f urls.txt

    WHERE:
        -c: number of concurrent users.

        -d: random interval between 0 and NUM that each "user" will sleep for between requests

        -t: time to run the benchmark.
            E.g.:
                -t60S (60 seconds)
                -t1H (1 hour)
                -t120M (120 minutes)

        -f: a file containing the URLs to be reached.

        -i: randomly select the URLs from the file.

        -D: Debug mode

        -g: is used for testing siege, for it to behave like "curl".
            E.g.:
                $ siege -H 'Accept: application/json' -H 'Content-Type: application/json' -g 'http://localhost:5001/normalize POST {"sku": {"sku": "260"}}'


    NOTE:
        - For 50 hits a second you would run it like this: -c50 -d1. We’ve had people ask about configurations like -c1000 -d1. A single pre-forking apache server cannot handle such load without modification. It has a hardcoded limit of 256. (http://www.joedog.org/siege-faq)

        - During the "siege", you should monitor the target machine %CPU and Memory (htop and uwsgitop must be nice for that). Specially if you are trying to tuneup nginx / uwsgi. Try to keep all cores busy, but with some margin of free %CPU / Memory.

        - How to build a "urls.txt" file from an webserver access log: http://www.joedog.org/siege-faq/#a21

        - How to make a POST request:
            (reference: https://groups.google.com/forum/#!topic/siege-users/sO-H1myTSMg)

            E.g.:
                $ siege -H 'Accept: application/json' -H 'Content-Type: application/json' -g 'http://localhost:5001/normalize POST < input.json'

                OR

                $ siege -H 'Accept: application/json' -H 'Content-Type: application/json'  -D -b -c5 -d1 -t10S 'http://localhost:5001/normalize POST {"sku": {"sku": "260", "available": true, "description": "Primeiro integrante da linha Pirelli Green Performance, o novo Cinturato P1 é um pneu para carros de pequeno porte, com alto grau tecnológico, que oferece performance com confiabilidade e segurança.", "url": "http://www.caculadepneus.com.br/loja/pneus/pneu-pirelli-175-65r14-cinturato-p1-82t.html", "price": "246,56", "instalments": "12", "special_price": "231,77", "name": "Pneu Pirelli 175/65R14 Cinturato P1 82T", "_created_at": "null", "image_url": "http://www.caculadepneus.com.br/loja/media/catalog/product/cache/1/image/288x/9df78eab33525d08d6e5fb8d27136e95/p/1/p1_3.jpg", "instalment_value": "20,55", "_original_values": null, "_specs_html": ["<div class=\"std\">        <p class=\"NormalWeb5\">Primeiro integrante da linha Pirelli Green Performance, o novo Cinturato P1 é um pneu para carros de pequeno porte, com alto grau tecnológico, que oferece performance com confiabilidade e segurança.</p><p class=\"NormalWeb5\">As medidas disponíveis no lançamento vão de 13\" a 15\" e equipam veículos como Fiat Palio, Uno e Punto, VW Gol, Polo e Fox entre outros.</p><p class=\"NormalWeb5\"><strong> </strong></p><p class=\"NormalWeb5\"><strong> </strong></p><p class=\"NormalWeb5\"><strong>O Cinturato P1 tem como diferenciais:</strong></p><p class=\"NormalWeb5\"> </p><p class=\"NormalWeb5\">- Novos compostos e desenho de banda de rodagem que oferecem segurança e ótima performance.<br>- Desenho de banda de rodagem e sulcos profundos que garantem melhor performance em pisos molhados, reduzindo a distância de frenagem a 80 Km/h em 3% em relação ao produto atual.<br>- Reforços nos ombros externos que otimizam aderência lateral em todas condições de asfalto, proporcionando melhor segurança em superfícies molhadas.<br>- Redução de ruído percebido de 30%  em comparação com pneus semelhantes o que proporciona  maior conforto e menor estresse ao motorista.<br>- Desgaste uniforme que permite um desempenho constante ao longo de toda vida útil desta nova linha.</p><p><br> </p><p> <strong>Especificações Técnicas</strong>:</p><p> </p><p><strong>Pneu Pirelli 175/65R14 Cinturato P1 82T</strong></p><table border=\"0\" cellpadding=\"0\" width=\"375\"><tbody><tr><td width=\"170\"><p>Modelo:</p></td><td width=\"199\"><p><strong>Cinturato P1</strong></p></td></tr><tr><td><p>Marca:</p></td><td width=\"199\"><p><strong>Pirelli </strong></p></td></tr><tr><td><p>Largura:</p></td><td width=\"199\"><p><strong>175</strong></p></td></tr><tr><td><p>Perfil:</p></td><td width=\"199\"><p><strong>65</strong></p></td></tr><tr><td><p>Aro:</p></td><td width=\"199\"><p><strong>14 </strong></p></td></tr><tr><td><p>Índice de Carga:</p></td><td width=\"199\"><p><strong>82 (Suporta até 475 kg) </strong></p></td></tr><tr><td><p>Índice de Velocidade:</p></td><td width=\"199\"><p><strong>T (Veloc. máxima de 190 km/h) </strong></p></td></tr></tbody></table><p> </p><p> <strong>Garantia:</strong></p><p> </p><p>Garantia do fornecedor: 60 meses da data de fabricação. <br><strong>SAC da Pirelli: 0800 728 7638 </strong></p><p> </p><p><strong>Cuidados:</strong></p><p> </p><p><strong>1 - </strong>As pressões devem ser verificadas regularmente em pneus frios (incluindo o de reserva). Nunca reduza a pressão do ar enquanto os pneus estiverem quentes, pois é normal que ela cresça além das pressões frias. <br><strong>2 - </strong>Os pneus devem ser substituídos quando suas superfícies demonstrarem sinais de desgaste, mesmo que o desgaste seja somente parcial (ex.: desgaste irregular) <br><strong>3 - </strong>Verifique o carro periodicamente e/ou os impactos do desgaste anormal <br><strong>4 - </strong>Faça o balanceamento dos pneus periodicamente, ou quando ocorrer vibração <br><strong>5 - </strong>Quando ocorrerem impactos ou furos verifique também a parte interna do pneu <br><strong>6 - </strong>Nunca estacione sobre locais com óleo, solvente, etc.; eles podem causar danos aos pneus <br><strong>7 - </strong>Cumpra o código de velocidade e o índice de carga <br><strong>8 - </strong>Os pneus radiais (mesmo os novos) devem sempre ser montados no eixo traseiro; a instalação deve estar sempre correta e completa <br><strong>9 - </strong>O estilo e a velocidade da direção afetam diretamente a vida dos pneus <br><strong>10 - </strong>Faça uma verificação geral de condição dos pneus regularmente.</p><p> </p><p> </p><p style=\"text-align: center;\"><strong><span style=\"text-decoration: underline;\"><a href=\"http://www.caculadepneus.com.br/tabela_pirelli.pdf\" target=\"_blank\">Clique aqui e acesse a Tabela de Pressão de Pneus. </a></span></strong><br><strong><span style=\"text-decoration: underline;\"><a href=\"http://www.caculadepneus.com.br/leitura_pneu.jpg\" target=\"_blank\">Clique aqui e veja como se lê um Pneu. </a></span></strong></p>    </div>", "<table class=\"data-table\" id=\"product-attribute-specs-table\" width=\"100%\">    <tr><th class=\"label\" style=\"width:25%\">Código</th><td class=\"data\" style=\"width:25%\">20274</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Peso (kg)</th><td class=\"data\" style=\"width:25%\">6.2670</td></tr><tr><th class=\"label\" style=\"width:25%\">Aro</th><td class=\"data\" style=\"width:25%\">14</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Altura (cm)</th><td class=\"data\" style=\"width:25%\">58,31</td></tr><tr><th class=\"label\" style=\"width:25%\">Carga</th><td class=\"data\" style=\"width:25%\">82 - até 475 kg[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a21\" target=\"_blank\">?</a>]</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Desenho</th><td class=\"data\" style=\"width:25%\">Assimétrico[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a26\" target=\"_blank\">?</a>]</td></tr><tr><th class=\"label\" style=\"width:25%\">Direcional</th><td class=\"data\" style=\"width:25%\">Não[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a27\" target=\"_blank\">?</a>]</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Índice</th><td class=\"data\" style=\"width:25%\">T - até 190 km/h[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a20\" target=\"_blank\">?</a>]</td></tr><tr><th class=\"label\" style=\"width:25%\">Largura (mm)</th><td class=\"data\" style=\"width:25%\">175</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Largura (cm)</th><td class=\"data\" style=\"width:25%\">17,5</td></tr><tr><th class=\"label\" style=\"width:25%\">Modelo</th><td class=\"data\" style=\"width:25%\">Cinturato P1</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Profundidade (cm)</th><td class=\"data\" style=\"width:25%\">58,31</td></tr><tr><th class=\"label\" style=\"width:25%\">Temperature</th><td class=\"data\" style=\"width:25%\">B[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a18\" target=\"_blank\">?</a>]</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Tipo</th><td class=\"data\" style=\"width:25%\">R</td></tr><tr><th class=\"label\" style=\"width:25%\">Tipo de Pneu</th><td class=\"data\" style=\"width:25%\">Passeio</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Traction</th><td class=\"data\" style=\"width:25%\">A[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a17\" target=\"_blank\">?</a>]</td></tr><tr><th class=\"label\" style=\"width:25%\">Treadwear</th><td class=\"data\" style=\"width:25%\">420[<a href=\"http://www.caculadepneus.com.br/site/pneus/conhecendo-o-pneu#a11\" target=\"_blank\">?</a>]</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Perfil</th><td class=\"data\" style=\"width:25%\">65</td></tr><tr><th class=\"label\" style=\"width:25%\">Fabricante</th><td class=\"data\" style=\"width:25%\">Pirelli</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Inmetro (Certificado / Registro)</th><td class=\"data\" style=\"width:25%\">04P-0002 / 002</td></tr><tr><th class=\"label\" style=\"width:25%\">Intelipost Prazo do Produto</th><td class=\"data\" style=\"width:25%\">Não</td><td class=\"espaco\" style=\"border:none;\"></td><th class=\"label\" style=\"width:25%\">Valor Frete Embutido</th><td class=\"data\" style=\"width:25%\">Não</td></tr><tr><th class=\"label\" style=\"width:25%\">Subsidio Fora de Frete Grátis(Intelipost)</th><td class=\"data\" style=\"width:25%\">Não</td><td class=\"espaco\" style=\"border:none;\"></td></tr>    </table>"], "id": "caçula_de_pneus-260", "_meta": {"spider_name": "caçula_de_pneus", "request_url": "http://www.caculadepneus.com.br/loja/pneus/pneu-pirelli-175-65r14-cinturato-p1-82t.html", "referer": "http://www.caculadepneus.com.br/loja/pneus-pirelli.html", "spider_run_id": "caçula_de_pneus-1424712277.05-1746951682297462794"}}}'

* Another alternative to simulate loading an http server: httperf

    $ httperf --server hostname \
    --port 80 --uri /test.html \
    --rate 150 --num-conn 27000 \
    --num-call 1 --timeout 5

    This command causes httperf to use the web server
    on the host with IP name hostname, running at port 80.
    The web page being retrieved is "/test. html" and,
    in this simple test, the same page is retrieved repeatedly.
    The rate at which requests are issued is 150 per second.
    The test involves initiating a total of 27,000 TCP
    connections and on each connection one HTTP call is
    performed (a call consists of sending a request and receiving
    a reply). The timeout option selects the number
    of seconds that the client is willing to wait to hear back
    from the server. If this timeout expires, the tool considers
    the corresponding call to have failed. Note that
    with a total of 27,000 connections and a rate of 150 per
    second, the total test duration will be approximately 180
    seconds, independent of what load the server can actually
    sustain.
    Once a test finishes, several statistics are printed.
    An example output of httperf is:

        Total: connections 27000 requests 26701 replies 26701 test-duration 179.996 s
        Connection rate: 150.0 conn/s (6.7 ms/conn, <=47 concurrent connections)
        Connection time [ms]: min i.I avg 5.0 max 315.0 median 2.5 stddev 13.0
        Connection time [ms]: connect 0.3
        Request rate: 148.3 req/s (6.7 ms/req)
        Request size [B]: 72.0
        Reply rate [replies/s]: min 139.8 avg 148.3 max 150.3 stddev 2.7 (36 samples)
        Reply time [ms]: response 4.6 transfer 0.0
        Reply size [B]: header 222.0 content 1024.0 footer 0.0 (total 1246.0)
        Reply status: ixx=0 2xx=26701 3xx=0 4xx=0 5xx=0
        CPU time [s]: user 55.31 system 124.41 (user 30.7% system 69.1% total 99.8%)
        Net I/O: 190.9 KB/s (1.6"10^6 bps)
        Errors: total 299 client-timo 299 socket-timo 0 connrefused 0 connreset 0
        Errors: fd-unavail 0 addrunavail 0 ftab-full 0 other 0

        (reference: http://www.hpl.hp.com/research/linux/httperf/wisp98/httperf.pdf)

=====

SSH TUNNELS

* SITUATION 1: You want to map directly to the remote host.

    To the same machine used as "gateway":
        $ ssh -f tparanhos@54.165.155.207 -L8888:54.165.155.207:80 -N
        (gateway: 54.165.155.207, target: 54.165.155.207)

    , where:

        -f = (optional parameter) go into the background just before it executes the command

        tparanhos@54.165.155.207 = username@server (you must have an account on it for the ssh connection to establish, so you then can forward the port.)

        -L8888:54.165.155.207:80: establishes the tunnel. The syntax is:
            -Llocal-port:host:remote-port
            (NOTE: the "host" can be ANY host, assuming that it is acessible through "username@server".)

        -N: (optional parameter) do not execute a command on the remote system.

    This will forward the local port 8888 to port 80 on 54.165.155.207, with the nice benefit of everything to be encrypted through ssh.

    Note:

    1) You can use that to redirect HTTP traffic, SMTP traffic, and basically every service that binds to a TCP port.

    2) If the above does not work, try to not passe the optional parameters above (-f -N).

    3) You can redirect in "chain": From my local machine to a remote one and another machine accessible by the remote one. The Note [2] above also applies.

    4) If it returns a "channel forbidden error" (add -vvv to the ssh commands above to enable the detailed connection log) and if I have configured an nginx python uwsgi app, I must explicitly say on the nginx configuration I want to listen on the remote host IP/name I am trying to establish the tunnel to. E.g.:

    ...
    server {
        listen  80;
        server_name localhost 127.0.0.1 TMC-LINUX.shm.com.br 187.11.132.104;
        resolver 127.0.0.1;
    ...

    Otherwise, if I have just configured localhost or 127.0.0.1 above on nginx, I will keep receiving these channel errors. :)

    The same applies if the service is postgresql or mysql or another service (they have to be listening on the specified IP, not only localhost/127.0.0.1).

* SITUATION 2: You have the scenario below:

    NAT:      54.165.155.207
    RABBITMQ: 172.16.1.232:15672

    , where to reach RABBITMQ, I just can do so connecting first with NAT through my ssh credentials (instead of NAT I could use another machine, it just would have to be on the same network as RABBITMQ).

    This is how I setup the tunnel:

        $ ssh -f tparanhos@54.165.155.207 -L15672:172.16.1.232:15672 -N

    , which gives us the formula:

        $ ssh -f user@NAT -L[LOCALHOST_PORT]:[RABBITMQ_HOST]:[RABBITMQ_PORT] -N

    Finishing that, I can access RABBITMQ directly, since it will be mapped to localhost:15672. And all the traffic will be encrypted through ssh.

HOW TO MAKE A REVERSE SSH TUNNEL: http://xmodulo.com/access-linux-server-behind-nat-reverse-ssh-tunnel.html

=====

Send mail through the terminal:

$ mail -a /opt/backup.sql -s "Backup File" user@example.com,user2@example.com < /dev/null

, where:

    -a is used for attachments
    -s is used for defining subject for email.

=====

Substituir texto recursivamente em todos os arquivos de um diretório:

cd /home/www

find . -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'

=====

Swapfile:

1) Create the file that will be the swapfile:
    $ dd if=/dev/zero of=/swapfile bs=1024 count=10000000
    In this example, it will create a swapfile as /swapfile with ~10GB in size. 

2) Secure the file, otherwise it will not be used on fstab:
    $ chown root:root /swapfile
    $ chmod 0600 /swapfile

3) Create a swap filesystem on the file:
    $ mkswap /swapfile

4) Enable the swapfile immediately:
    $ swapon /swapfile

5) Permanently add the swapfile to /etc/fstab:
    /swapfile none swap sw 0 0

=====

CHANGE HOSTNAME (centos / systemd enable distributions):
	METHOD 1:

	$ hostnamectl set-hostname mt-extracoes-business_utils

	To check it really changed:
		$ hostnamectl status

	METHOD 2:
		$ vim /etc/hostname (type the hostname in the file).
		$ hostname -F /etc/hostname

===

awk: usado para pegar uma "coluna" específica da saída de um comando do terminal. Combinado com o grep e o cat, pode ser uma maneira simples de fazer filtros em saídas de comando do terminal. 

Ex.:

	Para pegar a primeira coluna do "docker ps":
		$ docker ps | awk '{print $1}'

	Para pegar mais de uma coluna:
		$ ps aux | grep worker.py | awk '{print $2, $9, $10, $12, $13, $14, $15, $16, $17, $18}'

OBS.: O awk faz o split das colunas por espaço. Portanto, se em uma das linhas eu tiver um espaço a mais posso trazer as colunas trocadas.

===

Ajustar timezone do SO Para fuso horário do Brasil e configurar NTP:

1) Seta a timezone do SO para o fuso horário do Brasil (São Paulo)

	$ ln –s /usr/share/zoneinfo/Brazil/East /etc/localtime
    
    Se não funcionar: 
        $ cp -farv /usr/share/zoneinfo/Brazil/East /etc/localtime

2) Instala o ntp 

	$ yum install ntp

3) Edita o arquivo para usar o pool de servidores do Brasil:

$ vim /etc/ntp.conf

Trocar a linha "server" para:

server br.pool.ntp.org

4) Habilita e inicia o daemon:

	$ service ntpd enable
	$ service ntpd start 

===

date command print with milliseconds:

	$ date +%Y%m%d-%H%M%S-%N


===

Terminator: 

Toggle terminal full screen:
[Ctrl][Shift]x

===
