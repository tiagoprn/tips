A configuration to make apache serve django projects through mod_wsgi and static content (django settings.py, django project wsgi loader script, apache httpd.conf):

##### django settings.py (django 1.6)
    ...

    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    import os
    BASE_DIR = os.path.dirname(os.path.dirname(__file__))
    ROOT_PATH = os.path.realpath(os.path.dirname(__file__))

    DEBUG = False

    TEMPLATE_DIRS = (os.path.join(BASE_DIR, 'my_django_project', 'templates'))

    ALLOWED_HOSTS = ['localhost', 'mydomain.com', '127.0.0.1']

    ...

    MIDDLEWARE_CLASSES = (
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    )

    ROOT_URLCONF = 'my_django_project.urls'

    WSGI_APPLICATION = 'my_django_project.wsgi.application'

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'myprojectdb',
            'USER': 'postgres',
            'PASSWORD': 'admin123',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

    # Static files (CSS, JavaScript, Images)
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, "static")
    MEDIA_URL = '/static/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, "static", 'media')

    # Celery Broker
    BROKER_URL = 'amqp://user:password@localhost:5672/apphost'

    ...

    # Additional configuration
    try:
        execfile(os.path.join(ROOT_PATH, 'settings_local.py'))
    except IOError:
        pass

##### wsgi_apache_windows.py

    """
    WSGI config for my_django_project project.

    It exposes the WSGI callable as a module-level variable named ``application``.

    For more information on this file, see
    https://docs.djangoproject.com/en/1.6/howto/deployment/wsgi/
    """

    import os
    import sys
    import logging

    logger = logging.getLogger('')
    logger.setLevel(logging.DEBUG)
    handler = logging.StreamHandler(sys.stderr)
    handler.setLevel(logging.DEBUG)
    formatter = logging.Formatter('%(levelname)-8s %(message)s')
    handler.setFormatter(formatter)
    logger.addHandler(handler)

    # Calculates the path based on the location of the WSGI script.
    workspace = os.path.dirname(os.path.dirname(__file__))
    sys.path.append(workspace)

    # logs into the webserver log file (apache, nginx error_log)
    logger.debug(">>> WORKSPACE: %s" % workspace)
    logger.debug(">>> SYS.PATH: %s" % repr(sys.path))

    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "my_django_project.settings")

    from django.core.wsgi import get_wsgi_application
    application = get_wsgi_application()

##### httpd.conf (Apache)

    ServerRoot "C:/Program Files/Apache Software Foundation/Apache2.2"
    Listen 80

    LoadModule actions_module modules/mod_actions.so
    LoadModule alias_module modules/mod_alias.so
    LoadModule asis_module modules/mod_asis.so
    LoadModule auth_basic_module modules/mod_auth_basic.so
    LoadModule authn_default_module modules/mod_authn_default.so
    LoadModule authn_file_module modules/mod_authn_file.so
    LoadModule authz_default_module modules/mod_authz_default.so
    LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
    LoadModule authz_host_module modules/mod_authz_host.so
    LoadModule authz_user_module modules/mod_authz_user.so
    LoadModule autoindex_module modules/mod_autoindex.so
    LoadModule cgi_module modules/mod_cgi.so
    LoadModule dir_module modules/mod_dir.so
    LoadModule env_module modules/mod_env.so
    LoadModule include_module modules/mod_include.so
    LoadModule isapi_module modules/mod_isapi.so
    LoadModule log_config_module modules/mod_log_config.so
    LoadModule mime_module modules/mod_mime.so
    LoadModule negotiation_module modules/mod_negotiation.so
    LoadModule setenvif_module modules/mod_setenvif.so
    LoadModule wsgi_module modules/mod_wsgi.so

    <IfModule !mpm_netware_module>
        <IfModule !mpm_winnt_module>
            User daemon
            Group daemon
        </IfModule>
    </IfModule>

    ServerAdmin admin@mydomain.com

    # ServerName host.mydomain.com

    DocumentRoot "C:/Program Files/Apache Software Foundation/Apache2.2/htdocs"

    <IfModule dir_module>
        DirectoryIndex index.html
    </IfModule>

    <FilesMatch "^\.ht">
        Order allow,deny
        Deny from all
        Satisfy All
    </FilesMatch>

    ErrorLog "logs/error.log"
    LogLevel warn

    <IfModule log_config_module>
        LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
        LogFormat "%h %l %u %t \"%r\" %>s %b" common
        <IfModule logio_module>
          LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
        </IfModule>
        CustomLog "logs/access.log" common
    </IfModule>

    <IfModule alias_module>
        ScriptAlias /cgi-bin/ "C:/Program Files/Apache Software Foundation/Apache2.2/cgi-bin/"
    </IfModule>

    <IfModule cgid_module>
    </IfModule>

    <Directory "C:/Program Files/Apache Software Foundation/Apache2.2/cgi-bin">
        AllowOverride None
        Options None
        Order allow,deny
        Allow from all
    </Directory>

    ### STATIC assets
    Alias /static/ "D:/production/my_django_project/static/"
    <Directory D:/production/my_django_project/static>
             Order allow,deny
             Allow from all
    </Directory>

    ### MY_DJANGO_PROJECT settings
    <VirtualHost *:80>
        # DocumentRoot D:/production/my_django_project/my_django_project
        <Directory D:/production/my_django_project/my_django_project>
            Order allow,deny
            Allow from all
        </Directory>
        WSGIScriptAlias / "D:/production/my_django_project/my_django_project/wsgi_apache_windows.py"
    </VirtualHost>

    DefaultType text/plain

    <IfModule mime_module>
        TypesConfig conf/mime.types
        AddType application/x-compress .Z
        AddType application/x-gzip .gz .tgz
    </IfModule>

    # Secure (SSL/TLS) connections
    #Include conf/extra/httpd-ssl.conf
    #
    # Note: The following must must be present to support
    #       starting without SSL on platforms with no /dev/random equivalent
    #       but a statically compiled-in mod_ssl.
    #
    <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
    </IfModule>