- Create a dataframe from a csv file, choosing randomly 10 records. Then the data will be saved to a json txt file

import pandas as pd
import numpy as np
import json

dataframe = pd.read_csv(input.csv, sep='\t')
dataframe.fillna(value='N/A')

# choose the first 10 lines from the dataframe:
# samples_dataframe = dataframe.head(10)

# randomly choose ten rows from the dataframe
rows = np.random.choice(dataframe.index.values, 10)
samples_dataframe = dataframe.ix[rows]

dataframe_as_dict = samples_dataframe.to_dict(orient='records')

with open(output.json, mode='w+') as f:
    json.dump(dataframe_as_dict, f)

---

HOW TO USE "fillna()" WITH DIFFERENT DEFAULT VALUES FOR EACH COLUMN:

df = pd.read_csv(FULL_INPUT_CSV_PATH)

# specify which value to assume for each column if its' contents is blank or NaN
blank_fields_values = {
    'sku': '(vazio)',
    'name': '(vazio)',
    'price': 0,
    'special_price': 0,
    'category': '(vazio)',
    'department': '(vazio)'
}

df = df.fillna(value=blank_fields_values)
df.count()

---

Renaming a column:

    print 'Renaming column "_id.id" to "sku"...'
    df = df.rename(columns={'_id.id': 'sku'})

        , where:

        "columns" is a python dict. The key is the old column name, the value is the new column name.

---

